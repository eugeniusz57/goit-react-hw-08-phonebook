{"version":3,"file":"static/js/580.26e4a9fc.chunk.js","mappings":"yOA0DA,GA5CkBA,E,QAAAA,K,6BCLH,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACD,SAATT,GAIS,UAATA,GACFG,EAASM,GAEE,aAATT,GACFK,EAAYI,IAPZR,EAAQQ,EASX,EAUD,OACE,SAAC,EAAD,CACEC,MAAM,QACNC,GAAI,CACFC,QAAS,OACTC,WAAY,SACZC,eAAgB,UALpB,UAQE,UAACC,EAAA,EAAD,CACEC,UAAU,OACVC,SAnBe,SAAAV,GACnBA,EAAEW,iBACFrB,GAASsB,EAAAA,EAAAA,IAAS,CAAEnB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAcKe,aAAa,KACbT,GAAI,CACFC,QAAS,OACTS,cAAe,SACfR,WAAY,SACZC,eAAgB,SAChBQ,UAAW,GATf,WAYE,SAACC,EAAA,EAAD,CACEC,WAAW,yBACXC,OAAO,SACPC,WAAS,EACTC,UAAQ,EACRC,MAAM,OACNC,QAAQ,WACRC,KAAK,OACL9B,KAAK,OACLS,MAAOT,EACP+B,SAAUzB,KAEZ,SAACiB,EAAA,EAAD,CACEC,WAAW,0BACXC,OAAO,SACPC,WAAS,EACTC,UAAQ,EACRC,MAAM,QACNC,QAAQ,WACRC,KAAK,QACL9B,KAAK,QACLS,MAAOP,EACP6B,SAAUzB,KAEZ,SAACiB,EAAA,EAAD,CACEC,WAAW,6BACXC,OAAO,SACPC,WAAS,EACTC,UAAQ,EACRC,MAAM,WACNC,QAAQ,WACRC,KAAK,WACL9B,KAAK,WACLS,MAAOL,EACP2B,SAAUzB,KAEZ,SAAC0B,EAAA,EAAD,CACEF,KAAK,SACLD,QAAQ,YACRlB,GAAI,CACFsB,WAAY,UACZ,UAAW,CACTA,WAAY,YANlB,yBAeP,C","sources":["../node_modules/@mui/system/esm/Container/Container.js","pages/Register.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport createContainer from './createContainer';\n\n/**\n *\n * Demos:\n *\n * - [Container (Material UI)](https://mui.com/material-ui/react-container/)\n * - [Container (MUI System)](https://mui.com/system/react-container/)\n *\n * API:\n *\n * - [Container API](https://mui.com/system/api/container/)\n */\nconst Container = createContainer();\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Container } from '@mui/system';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { register } from 'reducer/auth/operations';\n\nexport default function Register() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n      return;\n    }\n    if (name === 'email') {\n      setEmail(value);\n    }\n    if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Container\n      width=\"600px\"\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        autoComplete=\"on\"\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginTop: 6,\n        }}\n      >\n        <TextField\n          helperText=\"Please enter your name\"\n          margin=\"normal\"\n          fullWidth\n          required\n          label=\"Name\"\n          variant=\"outlined\"\n          type=\"name\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n        <TextField\n          helperText=\"Please enter your Email\"\n          margin=\"normal\"\n          fullWidth\n          required\n          label=\"Email\"\n          variant=\"outlined\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n        />\n        <TextField\n          helperText=\"Please enter your password\"\n          margin=\"normal\"\n          fullWidth\n          required\n          label=\"Password\"\n          variant=\"outlined\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          sx={{\n            background: '#303f9f',\n            '&:hover': {\n              background: '#3f51b5',\n            },\n          }}\n        >\n          Sign Up\n        </Button>\n      </Box>\n    </Container>\n  );\n}\n"],"names":["createContainer","Register","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","e","target","value","width","sx","display","alignItems","justifyContent","Box","component","onSubmit","preventDefault","register","autoComplete","flexDirection","marginTop","TextField","helperText","margin","fullWidth","required","label","variant","type","onChange","Button","background"],"sourceRoot":""}